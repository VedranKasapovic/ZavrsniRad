/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package edunova.view;

import com.github.lgooddatepicker.components.DatePickerSettings;
import com.github.lgooddatepicker.components.TimePickerSettings;
import edunova.controller.ObradaDijete;
import edunova.controller.ObradaOdgovornaOsoba;
import edunova.controller.ObradaPosjeta;
import edunova.model.Dijete;
import edunova.model.OdgovornaOsoba;
import edunova.model.Posjeta;
import edunova.util.EdunovaException;
import edunova.util.Pomocno;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.time.ZoneId;
import java.util.Date;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Veky
 */
public class ProzorPosjeta extends javax.swing.JFrame {

    private ObradaPosjeta obrada;
    private ObradaOdgovornaOsoba obradaOdgovornaOsoba;
    private ObradaDijete obradaDijete;
    private SimpleDateFormat df;

    private int selectedIndex;

    /**
     * Creates new form ProzorPosjeta
     */
    public ProzorPosjeta() {
        initComponents();
        obrada = new ObradaPosjeta();
        obradaOdgovornaOsoba = new ObradaOdgovornaOsoba();
        obradaDijete = new ObradaDijete();
        df = new SimpleDateFormat("HH:mm");
        selectedIndex = 0;
        postavke();
        ucitaj();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtTraziOdgovornuOsobu = new javax.swing.JTextField();
        btnTrazi = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstOdgovorneOsobe = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstDjeca = new javax.swing.JList<>();
        dpDatum = new com.github.lgooddatepicker.components.DatePicker();
        tpVrijemeDolaska = new com.github.lgooddatepicker.components.TimePicker();
        tpVrijemeOdlaska = new com.github.lgooddatepicker.components.TimePicker();
        jLabel3 = new javax.swing.JLabel();
        cbGratis = new javax.swing.JCheckBox();
        cbPlaceno = new javax.swing.JCheckBox();
        cbRoditeljskaPratnja = new javax.swing.JCheckBox();
        txtBrojOrmarica = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblPosjete = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        btnDodaj = new javax.swing.JButton();
        btnPromjeni = new javax.swing.JButton();
        btnObriši = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        btnDodajodgovornuOsobu = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Odgovorna osoba:");

        btnTrazi.setText("Traži");
        btnTrazi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTraziActionPerformed(evt);
            }
        });

        lstOdgovorneOsobe.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstOdgovorneOsobeValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lstOdgovorneOsobe);

        jLabel2.setText("Djeca:");

        lstDjeca.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstDjecaValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(lstDjeca);

        jLabel3.setText("Vrijeme dolaska");

        cbGratis.setText("Gratis");

        cbPlaceno.setText("Plaćeno");

        cbRoditeljskaPratnja.setText("Roditeljska pratnja");

        txtBrojOrmarica.setText("0");

        jLabel4.setText("Broj ormarića");

        tblPosjete.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Dijete", "Vrijeme ulaska", "Vrijeme izlaska", "Plaćeno", "Roditeljska pratnja", "Gratis", "Broj ormarića", " "
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblPosjete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPosjeteMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tblPosjete);
        if (tblPosjete.getColumnModel().getColumnCount() > 0) {
            tblPosjete.getColumnModel().getColumn(7).setResizable(false);
            tblPosjete.getColumnModel().getColumn(7).setPreferredWidth(0);
        }

        jLabel5.setText("Posjeta:");

        btnDodaj.setText("Dodaj");
        btnDodaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajActionPerformed(evt);
            }
        });

        btnPromjeni.setText("Promjeni");
        btnPromjeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPromjeniActionPerformed(evt);
            }
        });

        btnObriši.setText("Obriši");
        btnObriši.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrišiActionPerformed(evt);
            }
        });

        jLabel6.setText("Datum");

        jLabel7.setText("Vrijeme odlaska");

        btnDodajodgovornuOsobu.setText("Dodaj odgovornu osobu");
        btnDodajodgovornuOsobu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajodgovornuOsobuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtTraziOdgovornuOsobu)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE))
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(btnTrazi))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(btnDodajodgovornuOsobu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dpDatum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(tpVrijemeDolaska, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel3))
                                        .addComponent(cbGratis, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(cbPlaceno, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(cbRoditeljskaPratnja)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(txtBrojOrmarica, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(tpVrijemeOdlaska, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)))
                                .addGap(87, 87, 87)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(btnObriši, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnDodaj, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnPromjeni, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addComponent(jLabel7))
                        .addGap(0, 38, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane4)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tpVrijemeDolaska, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dpDatum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbGratis)
                            .addComponent(btnDodaj))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbPlaceno)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbRoditeljskaPratnja)
                            .addComponent(btnPromjeni))
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(btnObriši))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBrojOrmarica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tpVrijemeOdlaska, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTraziOdgovornuOsobu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnTrazi)
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1)
                            .addComponent(jScrollPane2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                        .addComponent(btnDodajodgovornuOsobu)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void lstOdgovorneOsobeValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstOdgovorneOsobeValueChanged
        if (evt.getValueIsAdjusting()
                || lstOdgovorneOsobe.getSelectedValue() == null) {
            pocistiView();
            return;
        }

        DefaultListModel<Dijete> m = new DefaultListModel<>();
        for (Dijete d : lstOdgovorneOsobe.getSelectedValue().getDjeca()) {
            m.addElement(d);
        }
        lstDjeca.setModel(m);


    }//GEN-LAST:event_lstOdgovorneOsobeValueChanged

    private void lstDjecaValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstDjecaValueChanged
        if (evt.getValueIsAdjusting() || lstDjeca.getSelectedValue() == null) {
            return;
        }
    }//GEN-LAST:event_lstDjecaValueChanged

    private void tblPosjeteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPosjeteMouseClicked
        //System.out.println(jTable2.getse);
        //Integer sifraPosjeta = (Integer) tblPosjete.getValueAt(tblPosjete.getSelectedRow(), 7);

        PosjetaTableModel pm = (PosjetaTableModel) tblPosjete.getModel();

        obrada.setEntitet(pm.getPosjeta(tblPosjete.getSelectedRow()));
        // poziv popuni view
        popuniView();
    }//GEN-LAST:event_tblPosjeteMouseClicked

    private void btnTraziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTraziActionPerformed
        lstOdgovorneOsobe.setModel(new IgraonicaListModel<>(obradaOdgovornaOsoba.read(txtTraziOdgovornuOsobu.getText())));
        if (lstOdgovorneOsobe.getModel().getSize() > 0) {
            lstOdgovorneOsobe.setSelectedIndex(selectedIndex);
        }
    }//GEN-LAST:event_btnTraziActionPerformed

    private void btnDodajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajActionPerformed
        obrada.setEntitet(new Posjeta());
        popuniModel();
        try {
            obrada.create();
            ucitaj();
        } catch (EdunovaException ex) {
            JOptionPane.showMessageDialog(rootPane, ex.getPoruka());
        }

    }//GEN-LAST:event_btnDodajActionPerformed

    private void btnPromjeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPromjeniActionPerformed

        if (obrada.getEntitet() == null) {
            JOptionPane.showMessageDialog(rootPane, 
                    "Prvo odaberite posjetu");
            return;
        }
        popuniModel();

        try {
            obrada.update();
            ucitaj();
        } catch (EdunovaException e) {
            obrada.refresh();
            JOptionPane.showMessageDialog(rootPane,
                    e.getPoruka());
        }
    }//GEN-LAST:event_btnPromjeniActionPerformed

    private void btnObrišiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrišiActionPerformed

        if (obrada.getEntitet() == null) {
            JOptionPane.showMessageDialog(rootPane, "Prvo odaberite posjetu za brisanje!");
            return;
        }

        if (JOptionPane.showConfirmDialog(
                rootPane,
                "Sigurno obrisati posjetu " + obrada.getEntitet().getDjeca(),
                "Brisanje posjete",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE) == JOptionPane.NO_OPTION) {
            return;
        }

      

        popuniModel();

        try {
            obrada.delete();
            pocistiView();
            ucitaj();
        } catch (EdunovaException ex) {
            JOptionPane.showMessageDialog(rootPane, ex.getPoruka());
        }    }//GEN-LAST:event_btnObrišiActionPerformed

    private void btnDodajodgovornuOsobuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajodgovornuOsobuActionPerformed
        new ProzorOdgovornaOsoba().setVisible(true);
    }//GEN-LAST:event_btnDodajodgovornuOsobuActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodaj;
    private javax.swing.JButton btnDodajodgovornuOsobu;
    private javax.swing.JButton btnObriši;
    private javax.swing.JButton btnPromjeni;
    private javax.swing.JButton btnTrazi;
    private javax.swing.JCheckBox cbGratis;
    private javax.swing.JCheckBox cbPlaceno;
    private javax.swing.JCheckBox cbRoditeljskaPratnja;
    private com.github.lgooddatepicker.components.DatePicker dpDatum;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JList<Dijete> lstDjeca;
    private javax.swing.JList<OdgovornaOsoba> lstOdgovorneOsobe;
    private javax.swing.JTable tblPosjete;
    private com.github.lgooddatepicker.components.TimePicker tpVrijemeDolaska;
    private com.github.lgooddatepicker.components.TimePicker tpVrijemeOdlaska;
    private javax.swing.JTextField txtBrojOrmarica;
    private javax.swing.JTextField txtTraziOdgovornuOsobu;
    // End of variables declaration//GEN-END:variables

    private void postavke() {
        setTitle(Pomocno.NAZIV_APLIKACIJE + " Posjeta");
        //      prilagodiDatePicker();
        //      prilagodiTimePicker();
        lstOdgovorneOsobe.setModel(new IgraonicaListModel<>(obradaOdgovornaOsoba.read()));
        if (lstOdgovorneOsobe.getModel().getSize() > 0) {
            lstOdgovorneOsobe.setSelectedIndex(selectedIndex);
        }
        dpDatum.setDateToToday();
    }

    private void ucitaj() {

        // tblPosjete.setc
        tblPosjete.setModel(new PosjetaTableModel(obrada.read()));
    }

    private void prilagodiDatePicker() {
        DatePickerSettings dps
                = new DatePickerSettings(new Locale("hr", "HR"));
        dps.setFormatForDatesCommonEra(Pomocno.FORMAT_DATUMA);
        dps.setTranslationClear("Očisti");
        dps.setTranslationToday("Danas");
        dpDatum.setSettings(dps);
    }

    private void prilagodiTimePicker() {
        definirajPostavkeTP();

    }

    private void popuniView() {
//U lst postavljaš dgovornu osobu obrada a ovdje zoveš   obrada.getEntitet() koji nije postavljen u lstXXXValueChange
        var e = obrada.getEntitet();

        txtBrojOrmarica.setText(String.valueOf(e.getOrmaric()));
        cbGratis.setSelected(e.isGratis());
        cbPlaceno.setSelected(e.isPlaceno());
        cbRoditeljskaPratnja.setSelected(e.isRoditeljskaPratnja());
        dpDatum.setDateToToday();
        lstDjeca.setModel(new IgraonicaListModel<>(e.getDjeca()));
        lstOdgovorneOsobe.setSelectedIndex(e.getOdgovornaOsoba().getSifra());

         
        //https://github.com/IvanStanic84/Ribolov-Aplikacija/blob/main/src/main/java/edunova/view/ProzorNatjecanje.java#L153
       
        LocalDate date = e.getVrijemeDolaska().toInstant()
                .atZone(ZoneId.systemDefault()).toLocalDate();
        
        dpDatum.setDate(date);
        
        LocalTime time = e.getVrijemeDolaska().toInstant()
                .atZone(ZoneId.systemDefault()).toLocalTime();
        tpVrijemeDolaska.setTime(time);
        
        if(e.getVrijemeOdlaska()!=null){
        time = e.getVrijemeOdlaska().toInstant()
                .atZone(ZoneId.systemDefault()).toLocalTime();
        tpVrijemeOdlaska.setTime(time);}else{
                return;
                }
        
        
    }

    private void definirajPostavkeTP() {
        postaviVrijemePocetka();
        postaviVrijemePocetka();

    }

    private void postaviVrijemePocetka() {
        TimePickerSettings tps = new TimePickerSettings(new Locale("hr", "HR"));
        tps.generatePotentialMenuTimes(TimePickerSettings.TimeIncrement.TenMinutes, null, null);
        tps.setFormatForDisplayTime("HH:mm");
        tps.setFormatForMenuTimes("HH:mm");
        tps.initialTime = LocalTime.now();
    }

    private void postaviVrijemeZavrsetka() {
        TimePickerSettings tps = new TimePickerSettings(new Locale("hr", "HR"));
        tps.generatePotentialMenuTimes(TimePickerSettings.TimeIncrement.TenMinutes, null, null);
        tps.setFormatForDisplayTime("HH:mm");
        tps.setFormatForMenuTimes("HH:mm");
        tps.initialTime = LocalTime.now();
    }

    private void popuniModel() {
        var d = obrada.getEntitet();
        d.setDjeca(lstDjeca.getSelectedValuesList());
        d.setOdgovornaOsoba(lstOdgovorneOsobe.getSelectedValue());
        d.setGratis(cbGratis.isSelected());
        d.setOrmaric(Integer.valueOf(txtBrojOrmarica.getText().trim()));
        d.setPlaceno(cbPlaceno.isSelected());
        d.setRoditeljskaPratnja(cbRoditeljskaPratnja.isSelected());
       
        
        //https://github.com/IvanStanic84/Ribolov-Aplikacija/blob/main/src/main/java/edunova/view/ProzorNatjecanje.java#L167
        
        if (dpDatum.getDate() != null && tpVrijemeDolaska.getTime()!=null) {
            LocalDateTime ldt = LocalDateTime.of(dpDatum.getDate(),
                    tpVrijemeDolaska.getTime());
            d.setVrijemeDolaska(Date.from(ldt.atZone(ZoneId.systemDefault()).toInstant()));
        } else {
            d.setVrijemeDolaska(null);
        }
        
        
        if (dpDatum.getDate() != null && tpVrijemeOdlaska.getTime()!=null) {
            LocalDateTime ldt = LocalDateTime.of(dpDatum.getDate(),
                    tpVrijemeOdlaska.getTime());
            d.setVrijemeOdlaska(Date.from(ldt.atZone(ZoneId.systemDefault()).toInstant()));
        } else {
            d.setVrijemeOdlaska(null);
        }
                     
    }
    
    private void pocistiView(){
        txtBrojOrmarica.setText("0");
        cbGratis.setSelected(false);
        cbPlaceno.setSelected(false);
        cbRoditeljskaPratnja.setSelected(false);
        tpVrijemeDolaska.setTimeToNow();
        tpVrijemeOdlaska.setTime(null);
        
    }
}
